{"name": "test_ocean_pay_pc[op_params0]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 30000ms exceeded.\nCall log:\nwaiting for frame_locator(\"//iframe[@id=\\\"oceanpayment-iframe-region\\\"]\").locator(\"//*[@id=\\\"card_number_temp\\\"]\") to be visible", "trace": "self = <cases.test_checkout.test_oceanpay_credit.TestOceanPay object at 0x000001415F6615A0>\ncreate_page = <Page url='https://test.cncest.com/index.php?route=extension/module/popup_cart_and_quickly_checkout/checkout'>\nop_params = {'mobile_theme': 'kte-m', 'pc_theme': 'kte', 'site_host': 'https://test.cncest.com/'}\n\n    @pytest.mark.asyncio\n    @pytest.mark.OceanPayPc\n    @allure.story('PC端oceanPay模块的测试用例')\n    @pytest.mark.skipif(condition=check_fixture_value('payment_oceanpayment_status'),\n                        reason=\"站点未开启ocean pay支付方式\")\n    async def test_ocean_pay_pc(self, create_page, op_params):\n    \n        host = op_params.get('site_host')\n        pc_theme = op_params.get('pc_theme')\n        url = process_url(site_host=host, test_type=1001)\n    \n        obj = ModuleOceanPay(create_page, url, theme=pc_theme, host=host)\n        logger.info(f\"正在测试站点{host} 的oceanPay的结账模块\")\n    \n        # 1. go to buy\n        await obj.common_buy_step()\n    \n        # 2. choose oceanPay\n>       assert_res = await obj.case_oceanPay(host)\n\ncases\\test_checkout\\test_oceanpay_credit.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmodules\\module_checkout\\module_oceanpay.py:119: in case_oceanPay\n    await self.basic_frame_wait(frame=frame, **self.checkout_loc['wait_frame_oceanPay'])\ncommon\\basic.py:94: in basic_frame_wait\n    await ele.wait_for(state='visible')\nplaywright_venv\\lib\\site-packages\\playwright\\async_api\\_generated.py:17166: in wait_for\n    await self._impl_obj.wait_for(timeout=timeout, state=state)\nplaywright_venv\\lib\\site-packages\\playwright\\_impl\\_locator.py:670: in wait_for\n    await self._frame.wait_for_selector(\nplaywright_venv\\lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nplaywright_venv\\lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001415FC7B9D0>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001415FCD6DD0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for frame_locator(\"//iframe[@id=\\\"oceanpayment-iframe-region\\\"]\").locator(\"//*[@id=\\\"card_number_temp\\\"]\") to be visible\n\nplaywright_venv\\lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "attachments": [{"name": "log", "source": "a5207526-ec88-471c-8e75-07e2c1cbab44-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "fba797cb-035a-4f21-be5d-f92fbd267c40-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "op_params", "value": "{'site_host': 'https://test.cncest.com/', 'pc_theme': 'kte', 'mobile_theme': 'kte-m'}"}], "start": 1720165817320, "stop": 1720165901330, "uuid": "a0120611-b51d-4ac7-b4f0-5a0909c3b37f", "historyId": "84935891ec0fbc23c2de766ab7a8049b", "testCaseId": "49ff0af4d504b75b48066627122517eb", "fullName": "cases.test_checkout.test_oceanpay_credit.TestOceanPay#test_ocean_pay_pc", "labels": [{"name": "story", "value": "PC端oceanPay模块的测试用例"}, {"name": "feature", "value": "支付方式用例"}, {"name": "tag", "value": "@pytest.mark.skipif(condition=False, reason='站点未开启ocean pay支付方式')"}, {"name": "tag", "value": "OceanPayPc"}, {"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "cases.test_checkout"}, {"name": "suite", "value": "test_oceanpay_credit"}, {"name": "subSuite", "value": "TestOceanPay"}, {"name": "host", "value": "WIN-20221212DVX"}, {"name": "thread", "value": "57576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.test_checkout.test_oceanpay_credit"}]}